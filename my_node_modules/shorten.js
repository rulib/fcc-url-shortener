//mongo stuff
var mongo = require('mongodb').MongoClient;
var mongoUrl = 'mongodb://'+process.env.IP+':27017/urls';
var assert = require('assert');
var ObjectId = require('mongodb').ObjectID;
var urlCollection = 'urls';

var shortid = require('shortid');
var url = require('url');


exports.validCheck = function(req,res,next){
    var testUrl = req.params['0'];
    if(url.parse(testUrl).protocol==="http:"||url.parse(testUrl).protocol==="https:"){
        console.log("Valid URL: " + testUrl);
        next();
    }
    else{
        console.log("Invalid URL: " + testUrl);
        res.render('error');
    }
    
};

exports.renderOutput = function (req, res, next) {
    var id = req.id;
    console.log("Retrieving ID from req: "+req.id);
    var newURL = req.params['0'];
    console.log("Logging ID at render: " + id);
    console.log("rendering output");
    res.render('short',{
    original:newURL,
    short:'https://fcc-url-shortener-rulib.c9users.io/'+id
  });
};




exports.newEntry = function (req, res, next){
    var newURL = req.params['0'];
    var id = shortid.generate();
    req.id = id;
    console.log("Logging ID at newEntry: " + id);
    console.log("Shortening URL...");
    mongo.connect(mongoUrl, function(err,db){
        if (err) throw err;
        else{
            console.log("Database connected for writing of new entry with _id: "+id);
            var coll = db.collection(urlCollection);
            coll.insertOne(
            {
                _id:id,
                url:newURL
                },function (){
                    console.log("writing succeeded at ID: " + id);
                    db.close()});
                    next();
            }
    });
};

exports.dupeCheck = function (req,res,next){
    var newURL = req.params['0'];
    mongo.connect(mongoUrl, function(err,db){
        if (err) {console.log("Error error!" + err)}
        else{
            var coll = db.collection(urlCollection);
            var output = coll.find(
                {url:newURL}
                ).toArray(function(err, result){
                    console.log(result);
                    if (err) {console.log("Database search toArray error")}
                    else if (!result.length) {
                        //this is what happens if we need to generate a new shortcut
                        console.log("Not duplicate... generating new shortcut");
                        db.close();
                        //this is the real next() call from this middleware
                        next();
                    }
                    else {
                        //this is what happens if we need to call up an old one for its info
                        console.log("Duplicate found... calling up shortcut, result: " + result[0]["_id"]);
                        var id = result[0]["_id"];
                        console.log("rendering duplicate output");
                            res.render('short',{
                            original:newURL,
                            short:'https://fcc-url-shortener-rulib.c9users.io/'+id
                          });
                            db.close();
                    }
                });
        }        
        
    });
};

exports.redirect = function (req,res,next){
    var shortCode = req.path.slice(1);
    mongo.connect(mongoUrl, function(err,db){
        if (err) {console.log("Error error!" + err)}
        else{
            var coll = db.collection(urlCollection);
            coll.find(
                {_id:shortCode}
                ).toArray(function(err, result){
                    if (err) {throw err}
                    else if (result[0]){
                        req.stored = result[0].url;
                        db.close();
                        next();}
                    else{next('route')}
                });
        }        
        
    });    
};